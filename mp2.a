	TITLE	"MP2 by Bincheng"
	USE	"hawk.h"
	USE	"monitor.h"



	;R3 holds i value
	;R4 holds j value
	;R5 holds 2/j
	;R3 holds return value(product)

;RETAD	=	0
I	=	4
JREM	=	8
PROD	=	12
ARSIZE	=	16

MULT:
	TESTR	R3
	BEQ	MULTQT		;if i!= 0{

	CMPI	R3,1
	BGT	MULTET		;if i > 1{

	MOVE	R3,R4
	BR	MULTQT		;return j


MULTET:
	STORES	R1,R2
	STORE	R3,R2,I
	MOVE	R5,R4
	SRU	R5,1
	SUB	R4,R4,R5
	STORE	R4,R2,JREM

	MOVE	R3,R5
	LOAD	R4,R2,I
	ADDI	R2,R2,ARSIZE
	JSR	R1,MULT
	ADDI	R2,R2,-ARSIZE	;Now R3 has the value

	STORE	R3,R2,PROD
	
	LOAD	R3,R2,JREM
	LOAD	R4,R2,I
	ADDI	R2,R2,ARSIZE
	JSR	R1,MULT
	ADDI	R2,R2,-ARSIZE
	
	LOAD	R4,R2,PROD
	ADD	R3,R3,R4
	LOADS	R1,R2

MULTQT:
	JUMPS	R1


;RETAD	=	0
ARSIZE	=	4

	S	MAIN	
	INT	MAIN
MAIN:
	;R8 = x
	;R9 = y
	STORES	R1,R2

	LIS	R9,1
	
MAINLPY:
	ADDI	R4,R9,-1
	LIS	R3,2
	ADDI	R2,R2,ARSIZE
	LIL	R1,PUTAT
	JSRS	R1,R1
	ADDI	R2,R2,-ARSIZE
	
	LIS	R8,1

MAINLPX:
	MOVE	R3,R8
	MOVE	R4,R9
	ADDI	R2,R2,ARSIZE
	JSR	R1,MULT
	ADDI	R2,R2,-ARSIZE
	
	LIS	R4,4
	ADDI	R2,R2,ARSIZE
	LIL	R1,PUTDEC
	JSRS	R1,R1
	ADDI	R2,R2,ARSIZE
	
	ADDSI	R8,1
	CMPI	R8,10
	BLE	MAINLPX

	ADDSI	R9,1
	CMPI	R9,10
	BLE	MAINLPY

	LOADS	R1,R2
	JUMPS	R1

	END










